{"mappings":"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","sources":["./node_modules/focus-visible/dist/focus-visible.js","./core.js","./node_modules/html-midi-player/dist/esm/index.js","./assets/js/index.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * Applies the :focus-visible polyfill at the given scope.\n   * A scope in this case is either the top-level Document or a Shadow Root.\n   *\n   * @param {(Document|ShadowRoot)} scope\n   * @see https://github.com/WICG/focus-visible\n   */\n  function applyFocusVisiblePolyfill(scope) {\n    var hadKeyboardEvent = true;\n    var hadFocusVisibleRecently = false;\n    var hadFocusVisibleRecentlyTimeout = null;\n\n    var inputTypesAllowlist = {\n      text: true,\n      search: true,\n      url: true,\n      tel: true,\n      email: true,\n      password: true,\n      number: true,\n      date: true,\n      month: true,\n      week: true,\n      time: true,\n      datetime: true,\n      'datetime-local': true\n    };\n\n    /**\n     * Helper function for legacy browsers and iframes which sometimes focus\n     * elements like document, body, and non-interactive SVG.\n     * @param {Element} el\n     */\n    function isValidFocusTarget(el) {\n      if (\n        el &&\n        el !== document &&\n        el.nodeName !== 'HTML' &&\n        el.nodeName !== 'BODY' &&\n        'classList' in el &&\n        'contains' in el.classList\n      ) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Computes whether the given element should automatically trigger the\n     * `focus-visible` class being added, i.e. whether it should always match\n     * `:focus-visible` when focused.\n     * @param {Element} el\n     * @return {boolean}\n     */\n    function focusTriggersKeyboardModality(el) {\n      var type = el.type;\n      var tagName = el.tagName;\n\n      if (tagName === 'INPUT' && inputTypesAllowlist[type] && !el.readOnly) {\n        return true;\n      }\n\n      if (tagName === 'TEXTAREA' && !el.readOnly) {\n        return true;\n      }\n\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Add the `focus-visible` class to the given element if it was not added by\n     * the author.\n     * @param {Element} el\n     */\n    function addFocusVisibleClass(el) {\n      if (el.classList.contains('focus-visible')) {\n        return;\n      }\n      el.classList.add('focus-visible');\n      el.setAttribute('data-focus-visible-added', '');\n    }\n\n    /**\n     * Remove the `focus-visible` class from the given element if it was not\n     * originally added by the author.\n     * @param {Element} el\n     */\n    function removeFocusVisibleClass(el) {\n      if (!el.hasAttribute('data-focus-visible-added')) {\n        return;\n      }\n      el.classList.remove('focus-visible');\n      el.removeAttribute('data-focus-visible-added');\n    }\n\n    /**\n     * If the most recent user interaction was via the keyboard;\n     * and the key press did not include a meta, alt/option, or control key;\n     * then the modality is keyboard. Otherwise, the modality is not keyboard.\n     * Apply `focus-visible` to any current active element and keep track\n     * of our keyboard modality state with `hadKeyboardEvent`.\n     * @param {KeyboardEvent} e\n     */\n    function onKeyDown(e) {\n      if (e.metaKey || e.altKey || e.ctrlKey) {\n        return;\n      }\n\n      if (isValidFocusTarget(scope.activeElement)) {\n        addFocusVisibleClass(scope.activeElement);\n      }\n\n      hadKeyboardEvent = true;\n    }\n\n    /**\n     * If at any point a user clicks with a pointing device, ensure that we change\n     * the modality away from keyboard.\n     * This avoids the situation where a user presses a key on an already focused\n     * element, and then clicks on a different element, focusing it with a\n     * pointing device, while we still think we're in keyboard modality.\n     * @param {Event} e\n     */\n    function onPointerDown(e) {\n      hadKeyboardEvent = false;\n    }\n\n    /**\n     * On `focus`, add the `focus-visible` class to the target if:\n     * - the target received focus as a result of keyboard navigation, or\n     * - the event target is an element that will likely require interaction\n     *   via the keyboard (e.g. a text box)\n     * @param {Event} e\n     */\n    function onFocus(e) {\n      // Prevent IE from focusing the document or HTML element.\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n\n      if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {\n        addFocusVisibleClass(e.target);\n      }\n    }\n\n    /**\n     * On `blur`, remove the `focus-visible` class from the target.\n     * @param {Event} e\n     */\n    function onBlur(e) {\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n\n      if (\n        e.target.classList.contains('focus-visible') ||\n        e.target.hasAttribute('data-focus-visible-added')\n      ) {\n        // To detect a tab/window switch, we look for a blur event followed\n        // rapidly by a visibility change.\n        // If we don't see a visibility change within 100ms, it's probably a\n        // regular focus change.\n        hadFocusVisibleRecently = true;\n        window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n        hadFocusVisibleRecentlyTimeout = window.setTimeout(function() {\n          hadFocusVisibleRecently = false;\n        }, 100);\n        removeFocusVisibleClass(e.target);\n      }\n    }\n\n    /**\n     * If the user changes tabs, keep track of whether or not the previously\n     * focused element had .focus-visible.\n     * @param {Event} e\n     */\n    function onVisibilityChange(e) {\n      if (document.visibilityState === 'hidden') {\n        // If the tab becomes active again, the browser will handle calling focus\n        // on the element (Safari actually calls it twice).\n        // If this tab change caused a blur on an element with focus-visible,\n        // re-apply the class when the user switches back to the tab.\n        if (hadFocusVisibleRecently) {\n          hadKeyboardEvent = true;\n        }\n        addInitialPointerMoveListeners();\n      }\n    }\n\n    /**\n     * Add a group of listeners to detect usage of any pointing devices.\n     * These listeners will be added when the polyfill first loads, and anytime\n     * the window is blurred, so that they are active when the window regains\n     * focus.\n     */\n    function addInitialPointerMoveListeners() {\n      document.addEventListener('mousemove', onInitialPointerMove);\n      document.addEventListener('mousedown', onInitialPointerMove);\n      document.addEventListener('mouseup', onInitialPointerMove);\n      document.addEventListener('pointermove', onInitialPointerMove);\n      document.addEventListener('pointerdown', onInitialPointerMove);\n      document.addEventListener('pointerup', onInitialPointerMove);\n      document.addEventListener('touchmove', onInitialPointerMove);\n      document.addEventListener('touchstart', onInitialPointerMove);\n      document.addEventListener('touchend', onInitialPointerMove);\n    }\n\n    function removeInitialPointerMoveListeners() {\n      document.removeEventListener('mousemove', onInitialPointerMove);\n      document.removeEventListener('mousedown', onInitialPointerMove);\n      document.removeEventListener('mouseup', onInitialPointerMove);\n      document.removeEventListener('pointermove', onInitialPointerMove);\n      document.removeEventListener('pointerdown', onInitialPointerMove);\n      document.removeEventListener('pointerup', onInitialPointerMove);\n      document.removeEventListener('touchmove', onInitialPointerMove);\n      document.removeEventListener('touchstart', onInitialPointerMove);\n      document.removeEventListener('touchend', onInitialPointerMove);\n    }\n\n    /**\n     * When the polfyill first loads, assume the user is in keyboard modality.\n     * If any event is received from a pointing device (e.g. mouse, pointer,\n     * touch), turn off keyboard modality.\n     * This accounts for situations where focus enters the page from the URL bar.\n     * @param {Event} e\n     */\n    function onInitialPointerMove(e) {\n      // Work around a Safari quirk that fires a mousemove on <html> whenever the\n      // window blurs, even if you're tabbing out of the page. ¯\\_(ツ)_/¯\n      if (e.target.nodeName && e.target.nodeName.toLowerCase() === 'html') {\n        return;\n      }\n\n      hadKeyboardEvent = false;\n      removeInitialPointerMoveListeners();\n    }\n\n    // For some kinds of state, we are interested in changes at the global scope\n    // only. For example, global pointer input, global key presses and global\n    // visibility change should affect the state at every scope:\n    document.addEventListener('keydown', onKeyDown, true);\n    document.addEventListener('mousedown', onPointerDown, true);\n    document.addEventListener('pointerdown', onPointerDown, true);\n    document.addEventListener('touchstart', onPointerDown, true);\n    document.addEventListener('visibilitychange', onVisibilityChange, true);\n\n    addInitialPointerMoveListeners();\n\n    // For focus and blur, we specifically care about state changes in the local\n    // scope. This is because focus / blur events that originate from within a\n    // shadow root are not re-dispatched from the host element if it was already\n    // the active element in its own scope:\n    scope.addEventListener('focus', onFocus, true);\n    scope.addEventListener('blur', onBlur, true);\n\n    // We detect that a node is a ShadowRoot by ensuring that it is a\n    // DocumentFragment and also has a host property. This check covers native\n    // implementation and polyfill implementation transparently. If we only cared\n    // about the native implementation, we could just check if the scope was\n    // an instance of a ShadowRoot.\n    if (scope.nodeType === Node.DOCUMENT_FRAGMENT_NODE && scope.host) {\n      // Since a ShadowRoot is a special kind of DocumentFragment, it does not\n      // have a root element to add a class to. So, we add this attribute to the\n      // host element instead:\n      scope.host.setAttribute('data-js-focus-visible', '');\n    } else if (scope.nodeType === Node.DOCUMENT_NODE) {\n      document.documentElement.classList.add('js-focus-visible');\n      document.documentElement.setAttribute('data-js-focus-visible', '');\n    }\n  }\n\n  // It is important to wrap all references to global window and document in\n  // these checks to support server-side rendering use cases\n  // @see https://github.com/WICG/focus-visible/issues/199\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    // Make the polyfill helper globally available. This can be used as a signal\n    // to interested libraries that wish to coordinate with the polyfill for e.g.,\n    // applying the polyfill to a shadow root:\n    window.applyFocusVisiblePolyfill = applyFocusVisiblePolyfill;\n\n    // Notify interested libraries of the polyfill's presence, in case the\n    // polyfill was loaded lazily:\n    var event;\n\n    try {\n      event = new CustomEvent('focus-visible-polyfill-ready');\n    } catch (error) {\n      // IE11 does not support using CustomEvent as a constructor directly:\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent('focus-visible-polyfill-ready', false, false, {});\n    }\n\n    window.dispatchEvent(event);\n  }\n\n  if (typeof document !== 'undefined') {\n    // Apply the polyfill to the global document, so that no JavaScript\n    // coordination is required to use the polyfill in the top-level document:\n    applyFocusVisiblePolyfill(document);\n  }\n\n})));\n",null,"/**\n * html-midi-player@1.4.0\n * https://github.com/cifkao/html-midi-player.git\n * @author Ondřej Cífka (@cifkao)\n * @license BSD-2-Clause\n */\n\nimport { urlToNoteSequence, PianoRollSVGVisualizer, WaterfallSVGVisualizer, StaffSVGVisualizer, Player, SoundFontPlayer } from '@magenta/music/esm/core.js';\n\nvar playIcon = \"<svg width=\\\"24\\\" height=\\\"24\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 6.35 6.35\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n <path d=\\\"m4.4979 3.175-2.1167 1.5875v-3.175z\\\" stroke-width=\\\".70201\\\"/>\\n</svg>\\n\";\n\nvar pauseIcon = \"<svg width=\\\"24\\\" height=\\\"24\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 6.35 6.35\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n <path d=\\\"m1.8521 1.5875v3.175h0.92604v-3.175zm1.7198 0v3.175h0.92604v-3.175z\\\" stroke-width=\\\".24153\\\"/>\\n</svg>\\n\";\n\nvar errorIcon = \"<svg width=\\\"24\\\" height=\\\"24\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 6.35 6.35\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n <path transform=\\\"scale(.26458)\\\" d=\\\"m12 3.5a8.4993 8.4993 0 0 0-8.5 8.5 8.4993 8.4993 0 0 0 8.5 8.5 8.4993 8.4993 0 0 0 8.5-8.5 8.4993 8.4993 0 0 0-8.5-8.5zm-1.4062 3.5h3v6h-3v-6zm0 8h3v2h-3v-2z\\\"/>\\n</svg>\\n\";\n\nvar controlsCSS = \":host {\\n  display: inline-block;\\n  width: 300px;\\n  margin: 3px;\\n  vertical-align: bottom;\\n  font-family: sans-serif;\\n  font-size: 14px;\\n}\\n\\n:focus:not(.focus-visible) {\\n  outline: none;\\n}\\n\\n.controls {\\n  width: inherit;\\n  height: inherit;\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-direction: row;\\n  position: relative;\\n  overflow: hidden;\\n  align-items: center;\\n  border-radius: 100px;\\n  background: #f2f5f6;\\n  padding: 0 0.25em;\\n  user-select: none;\\n}\\n.controls > * {\\n  margin: 0.8em 0.45em;\\n}\\n.controls input, .controls button {\\n  cursor: pointer;\\n}\\n.controls input:disabled, .controls button:disabled {\\n  cursor: inherit;\\n}\\n.controls button {\\n  text-align: center;\\n  background: rgba(204, 204, 204, 0);\\n  border: none;\\n  width: 32px;\\n  height: 32px;\\n  border-radius: 100%;\\n  transition: background-color 0.25s ease 0s;\\n  padding: 0;\\n}\\n.controls button:not(:disabled):hover {\\n  background: rgba(204, 204, 204, 0.3);\\n}\\n.controls button:not(:disabled):active {\\n  background: rgba(204, 204, 204, 0.6);\\n}\\n.controls button .icon {\\n  display: none;\\n}\\n.controls button .icon, .controls button .icon svg {\\n  vertical-align: middle;\\n}\\n.controls button .icon svg {\\n  fill: currentColor;\\n}\\n.controls .seek-bar {\\n  flex: 1;\\n  min-width: 0;\\n  margin-right: 1.1em;\\n  background: transparent;\\n}\\n.controls .seek-bar::-moz-range-track {\\n  background-color: #555;\\n}\\n.controls.stopped .play-icon, .controls.playing .stop-icon, .controls.error .error-icon {\\n  display: inherit;\\n}\\n.controls.frozen > div, .controls > button:disabled .icon {\\n  opacity: 0.5;\\n}\\n.controls .overlay {\\n  z-index: 0;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  margin: 0;\\n  box-sizing: border-box;\\n  display: none;\\n  opacity: 1;\\n}\\n.controls.loading .loading-overlay {\\n  display: block;\\n  background: linear-gradient(110deg, #92929200 5%, #92929288 25%, #92929200 45%);\\n  background-size: 250% 100%;\\n  background-repeat: repeat-y;\\n  animation: shimmer 1.5s linear infinite;\\n}\\n\\n@keyframes shimmer {\\n  0% {\\n    background-position: 125% 0;\\n  }\\n  100% {\\n    background-position: -200% 0;\\n  }\\n}\";\n\nvar visualizerCSS = \":host {\\n  display: block;\\n}\\n\\n::slotted(.piano-roll-visualizer) {\\n  overflow-x: auto;\\n}\";\n\n/// <reference path=\"imports.d.ts\"/>\nconst controlsTemplate = document.createElement('template');\ncontrolsTemplate.innerHTML = `\n<style>\n${controlsCSS}\n</style>\n<div class=\"controls stopped frozen\" part=\"control-panel\">\n  <button class=\"play\" part=\"play-button\" disabled>\n    <span class=\"icon play-icon\">${playIcon}</span>\n    <span class=\"icon stop-icon\">${pauseIcon}</span>\n    <span class=\"icon error-icon\">${errorIcon}</span>\n  </button>\n  <div part=\"time\"><span class=\"current-time\" part=\"current-time\">0:00</span> / <span class=\"total-time\" part=\"total-time\">0:00</span></div>\n  <input type=\"range\" min=\"0\" max=\"0\" value=\"0\" step=\"any\" class=\"seek-bar\" part=\"seek-bar\" disabled>\n  <div class=\"overlay loading-overlay\" part=\"loading-overlay\"></div>\n</div>\n`;\nconst visualizerTemplate = document.createElement('template');\nvisualizerTemplate.innerHTML = `\n<style>\n${visualizerCSS}\n</style>\n<slot>\n</slot>\n`;\n\nfunction formatTime(seconds) {\n    const negative = (seconds < 0);\n    seconds = Math.floor(Math.abs(seconds || 0));\n    const s = seconds % 60;\n    const m = (seconds - s) / 60;\n    const h = (seconds - s - 60 * m) / 3600;\n    const sStr = (s > 9) ? `${s}` : `0${s}`;\n    const mStr = (m > 9 || !h) ? `${m}:` : `0${m}:`;\n    const hStr = h ? `${h}:` : '';\n    return (negative ? '-' : '') + hStr + mStr + sStr;\n}\n\nconst VISUALIZER_TYPES = ['piano-roll', 'waterfall', 'staff'];\n/**\n * MIDI visualizer element.\n *\n * The visualizer is implemented via SVG elements which support styling as described\n * [here](https://magenta.github.io/magenta-js/music/demos/visualizer.html).\n *\n * See also the\n * [`@magenta/music/core/visualizer` docs](https://magenta.github.io/magenta-js/music/modules/_core_visualizer_.html).\n *\n * @prop src - MIDI file URL\n * @prop type - Visualizer type\n * @prop noteSequence - Magenta note sequence object representing the currently displayed content\n * @prop config - Magenta visualizer config object\n */\nclass VisualizerElement extends HTMLElement {\n    constructor() {\n        super(...arguments);\n        this.domInitialized = false;\n        this.ns = null;\n        this._config = {};\n    }\n    static get observedAttributes() { return ['src', 'type']; }\n    connectedCallback() {\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(visualizerTemplate.content.cloneNode(true));\n        if (this.domInitialized) {\n            return;\n        }\n        this.domInitialized = true;\n        this.wrapper = document.createElement('div');\n        this.appendChild(this.wrapper);\n        this.initVisualizerNow();\n    }\n    attributeChangedCallback(name, _oldValue, _newValue) {\n        if (name === 'src' || name === 'type') {\n            this.initVisualizer();\n        }\n    }\n    initVisualizer() {\n        if (this.initTimeout == null) {\n            this.initTimeout = window.setTimeout(() => this.initVisualizerNow());\n        }\n    }\n    async initVisualizerNow() {\n        this.initTimeout = null;\n        if (!this.domInitialized) {\n            return;\n        }\n        if (this.src) {\n            this.ns = null;\n            this.ns = await urlToNoteSequence(this.src);\n        }\n        this.wrapper.innerHTML = '';\n        if (!this.ns) {\n            return;\n        }\n        if (this.type === 'piano-roll') {\n            this.wrapper.classList.add('piano-roll-visualizer');\n            const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            this.wrapper.appendChild(svg);\n            this.visualizer = new PianoRollSVGVisualizer(this.ns, svg, this._config);\n        }\n        else if (this.type === 'waterfall') {\n            this.wrapper.classList.add('waterfall-visualizer');\n            this.visualizer = new WaterfallSVGVisualizer(this.ns, this.wrapper, this._config);\n        }\n        else if (this.type === 'staff') {\n            this.wrapper.classList.add('staff-visualizer');\n            const div = document.createElement('div');\n            this.wrapper.appendChild(div);\n            this.visualizer = new StaffSVGVisualizer(this.ns, div, this._config);\n        }\n    }\n    redraw(activeNote) {\n        if (this.visualizer) {\n            this.visualizer.redraw(activeNote, activeNote != null);\n        }\n    }\n    clearActiveNotes() {\n        if (this.visualizer) {\n            this.visualizer.clearActiveNotes();\n        }\n    }\n    get noteSequence() {\n        return this.ns;\n    }\n    set noteSequence(value) {\n        this.ns = value;\n        this.removeAttribute('src'); // Triggers initVisualizer only if src was present.\n        this.initVisualizer();\n    }\n    get src() {\n        return this.getAttribute('src');\n    }\n    set src(value) {\n        this.ns = null;\n        this.setOrRemoveAttribute('src', value); // Triggers initVisualizer only if src was present.\n        this.initVisualizer();\n    }\n    get type() {\n        let value = this.getAttribute('type');\n        if (VISUALIZER_TYPES.indexOf(value) < 0) {\n            value = 'piano-roll';\n        }\n        return value;\n    }\n    set type(value) {\n        if (value != null && VISUALIZER_TYPES.indexOf(value) < 0) {\n            throw new Error(`Unknown visualizer type ${value}. Allowed values: ${VISUALIZER_TYPES.join(', ')}`);\n        }\n        this.setOrRemoveAttribute('type', value);\n    }\n    get config() {\n        return this._config;\n    }\n    set config(value) {\n        this._config = value;\n        this.initVisualizer();\n    }\n    setOrRemoveAttribute(name, value) {\n        if (value == null) {\n            this.removeAttribute(name);\n        }\n        else {\n            this.setAttribute(name, value);\n        }\n    }\n}\n\nconst VISUALIZER_EVENTS = ['start', 'stop', 'note'];\nconst DEFAULT_SOUNDFONT = 'https://storage.googleapis.com/magentadata/js/soundfonts/sgm_plus';\nlet playingPlayer = null;\n/**\n * MIDI player element.\n * See also the [`@magenta/music/core/player` docs](https://magenta.github.io/magenta-js/music/modules/_core_player_.html).\n *\n * The element supports styling using the CSS [`::part` syntax](https://developer.mozilla.org/docs/Web/CSS/::part)\n * (see the list of shadow parts [below](#css-shadow-parts)). For example:\n * ```css\n * midi-player::part(control-panel) {\n *     background: aquamarine;\n *     border-radius: 0px;\n * }\n * ```\n *\n * @prop src - MIDI file URL\n * @prop soundFont - Magenta SoundFont URL, an empty string to use the default SoundFont, or `null` to use a simple oscillator synth\n * @prop noteSequence - Magenta note sequence object representing the currently loaded content\n * @prop currentTime - Current playback position in seconds\n * @prop duration - Content duration in seconds\n * @prop playing - Indicates whether the player is currently playing\n * @attr visualizer - A selector matching `midi-visualizer` elements to bind to this player\n *\n * @fires load - The content is loaded and ready to play\n * @fires start - The player has started playing\n * @fires stop - The player has stopped playing\n * @fires note - A note starts\n *\n * @csspart control-panel - `<div>` containing all the controls\n * @csspart play-button - Play button\n * @csspart time - Numeric time indicator\n * @csspart current-time - Elapsed time\n * @csspart total-time - Total duration\n * @csspart seek-bar - `<input type=\"range\">` showing playback position\n * @csspart loading-overlay - Overlay with shimmer animation\n */\nclass PlayerElement extends HTMLElement {\n    constructor() {\n        super();\n        this.domInitialized = false;\n        this.needInitNs = false;\n        this.visualizerListeners = new Map();\n        this.ns = null;\n        this._playing = false;\n        this.seeking = false;\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(controlsTemplate.content.cloneNode(true));\n        this.controlPanel = this.shadowRoot.querySelector('.controls');\n        this.playButton = this.controlPanel.querySelector('.play');\n        this.currentTimeLabel = this.controlPanel.querySelector('.current-time');\n        this.totalTimeLabel = this.controlPanel.querySelector('.total-time');\n        this.seekBar = this.controlPanel.querySelector('.seek-bar');\n    }\n    static get observedAttributes() { return ['sound-font', 'src', 'visualizer']; }\n    connectedCallback() {\n        if (this.domInitialized) {\n            return;\n        }\n        this.domInitialized = true;\n        const applyFocusVisiblePolyfill = window.applyFocusVisiblePolyfill;\n        if (applyFocusVisiblePolyfill != null) {\n            applyFocusVisiblePolyfill(this.shadowRoot);\n        }\n        this.playButton.addEventListener('click', () => {\n            if (this.player.isPlaying()) {\n                this.stop();\n            }\n            else {\n                this.start();\n            }\n        });\n        this.seekBar.addEventListener('input', () => {\n            // Pause playback while the user is manipulating the control\n            this.seeking = true;\n            if (this.player && this.player.getPlayState() === 'started') {\n                this.player.pause();\n            }\n        });\n        this.seekBar.addEventListener('change', () => {\n            const time = this.currentTime; // This returns the seek bar value as a number\n            this.currentTimeLabel.textContent = formatTime(time);\n            if (this.player) {\n                if (this.player.isPlaying()) {\n                    this.player.seekTo(time);\n                    if (this.player.getPlayState() === 'paused') {\n                        this.player.resume();\n                    }\n                }\n            }\n            this.seeking = false;\n        });\n        this.initPlayerNow();\n    }\n    attributeChangedCallback(name, _oldValue, newValue) {\n        if (!this.hasAttribute(name)) {\n            newValue = null;\n        }\n        if (name === 'sound-font' || name === 'src') {\n            this.initPlayer();\n        }\n        else if (name === 'visualizer') {\n            const fn = () => { this.setVisualizerSelector(newValue); };\n            if (document.readyState === 'loading') {\n                window.addEventListener('DOMContentLoaded', fn);\n            }\n            else {\n                fn();\n            }\n        }\n    }\n    initPlayer(initNs = true) {\n        this.needInitNs = this.needInitNs || initNs;\n        if (this.initTimeout == null) {\n            this.stop();\n            this.setLoading();\n            this.initTimeout = window.setTimeout(() => this.initPlayerNow(this.needInitNs));\n        }\n    }\n    async initPlayerNow(initNs = true) {\n        this.initTimeout = null;\n        this.needInitNs = false;\n        if (!this.domInitialized) {\n            return;\n        }\n        try {\n            let ns = null;\n            if (initNs) {\n                if (this.src) {\n                    this.ns = null;\n                    this.ns = await urlToNoteSequence(this.src);\n                }\n                this.currentTime = 0;\n                if (!this.ns) {\n                    this.setError('No content loaded');\n                }\n            }\n            ns = this.ns;\n            if (ns) {\n                this.seekBar.max = String(ns.totalTime);\n                this.totalTimeLabel.textContent = formatTime(ns.totalTime);\n            }\n            else {\n                this.seekBar.max = '0';\n                this.totalTimeLabel.textContent = formatTime(0);\n                return;\n            }\n            let soundFont = this.soundFont;\n            const callbackObject = {\n                // Call callbacks only if we are still playing the same note sequence.\n                run: (n) => (this.ns === ns) && this.noteCallback(n),\n                stop: () => { }\n            };\n            if (soundFont === null) {\n                this.player = new Player(false, callbackObject);\n            }\n            else {\n                if (soundFont === \"\") {\n                    soundFont = DEFAULT_SOUNDFONT;\n                }\n                this.player = new SoundFontPlayer(soundFont, undefined, undefined, undefined, callbackObject);\n                await this.player.loadSamples(ns);\n            }\n            if (this.ns !== ns) {\n                // If we started loading a different sequence in the meantime...\n                return;\n            }\n            this.setLoaded();\n            this.dispatchEvent(new CustomEvent('load'));\n        }\n        catch (error) {\n            this.setError(String(error));\n            throw error;\n        }\n    }\n    start() {\n        (async () => {\n            if (this.player) {\n                if (this.player.getPlayState() == 'stopped') {\n                    if (playingPlayer && playingPlayer.playing) {\n                        playingPlayer.stop();\n                    }\n                    playingPlayer = this;\n                    this._playing = true;\n                    let offset = this.currentTime;\n                    // Jump to the start if there are no notes left to play.\n                    if (this.ns.notes.filter((note) => note.startTime > offset).length == 0) {\n                        offset = 0;\n                    }\n                    this.currentTime = offset;\n                    this.controlPanel.classList.remove('stopped');\n                    this.controlPanel.classList.add('playing');\n                    try {\n                        const promise = this.player.start(this.ns, undefined, offset);\n                        this.dispatchEvent(new CustomEvent('start'));\n                        await promise;\n                        this.handleStop(true);\n                    }\n                    catch (error) {\n                        this.handleStop();\n                        throw error;\n                    }\n                }\n                else if (this.player.getPlayState() == 'paused') {\n                    // This normally should not happen, since we pause playback only when seeking.\n                    this.player.resume();\n                }\n            }\n        })();\n    }\n    stop() {\n        if (this.player && this.player.isPlaying()) {\n            this.player.stop();\n        }\n        this.handleStop(false);\n    }\n    addVisualizer(visualizer) {\n        const listeners = {\n            start: () => { visualizer.noteSequence = this.noteSequence; },\n            stop: () => { visualizer.clearActiveNotes(); },\n            note: (event) => { visualizer.redraw(event.detail.note); },\n        };\n        for (const name of VISUALIZER_EVENTS) {\n            this.addEventListener(name, listeners[name]);\n        }\n        this.visualizerListeners.set(visualizer, listeners);\n    }\n    removeVisualizer(visualizer) {\n        const listeners = this.visualizerListeners.get(visualizer);\n        for (const name of VISUALIZER_EVENTS) {\n            this.removeEventListener(name, listeners[name]);\n        }\n        this.visualizerListeners.delete(visualizer);\n    }\n    noteCallback(note) {\n        if (!this.playing) {\n            return;\n        }\n        this.dispatchEvent(new CustomEvent('note', { detail: { note } }));\n        if (this.seeking) {\n            return;\n        }\n        this.seekBar.value = String(note.startTime);\n        this.currentTimeLabel.textContent = formatTime(note.startTime);\n    }\n    handleStop(finished = false) {\n        if (finished) {\n            this.currentTime = this.duration;\n        }\n        this.controlPanel.classList.remove('playing');\n        this.controlPanel.classList.add('stopped');\n        if (this._playing) {\n            this._playing = false;\n            this.dispatchEvent(new CustomEvent('stop', { detail: { finished } }));\n        }\n    }\n    setVisualizerSelector(selector) {\n        // Remove old listeners\n        for (const listeners of this.visualizerListeners.values()) {\n            for (const name of VISUALIZER_EVENTS) {\n                this.removeEventListener(name, listeners[name]);\n            }\n        }\n        this.visualizerListeners.clear();\n        // Match visualizers and add them as listeners\n        if (selector != null) {\n            for (const element of document.querySelectorAll(selector)) {\n                if (!(element instanceof VisualizerElement)) {\n                    console.warn(`Selector ${selector} matched non-visualizer element`, element);\n                    continue;\n                }\n                this.addVisualizer(element);\n            }\n        }\n    }\n    setLoading() {\n        this.playButton.disabled = true;\n        this.seekBar.disabled = true;\n        this.controlPanel.classList.remove('error');\n        this.controlPanel.classList.add('loading', 'frozen');\n        this.controlPanel.removeAttribute('title');\n    }\n    setLoaded() {\n        this.controlPanel.classList.remove('loading', 'frozen');\n        this.playButton.disabled = false;\n        this.seekBar.disabled = false;\n    }\n    setError(error) {\n        this.playButton.disabled = true;\n        this.seekBar.disabled = true;\n        this.controlPanel.classList.remove('loading', 'stopped', 'playing');\n        this.controlPanel.classList.add('error', 'frozen');\n        this.controlPanel.title = error;\n    }\n    get noteSequence() {\n        return this.ns;\n    }\n    set noteSequence(value) {\n        this.ns = value;\n        this.removeAttribute('src'); // Triggers initPlayer only if src was present.\n        this.initPlayer();\n    }\n    get src() {\n        return this.getAttribute('src');\n    }\n    set src(value) {\n        this.ns = null;\n        this.setOrRemoveAttribute('src', value); // Triggers initPlayer only if src was present.\n        this.initPlayer();\n    }\n    /**\n     * @attr sound-font\n     */\n    get soundFont() {\n        return this.getAttribute('sound-font');\n    }\n    set soundFont(value) {\n        this.setOrRemoveAttribute('sound-font', value);\n    }\n    get currentTime() {\n        return parseFloat(this.seekBar.value);\n    }\n    set currentTime(value) {\n        this.seekBar.value = String(value);\n        this.currentTimeLabel.textContent = formatTime(this.currentTime);\n        if (this.player && this.player.isPlaying()) {\n            this.player.seekTo(value);\n        }\n    }\n    get duration() {\n        return parseFloat(this.seekBar.max);\n    }\n    get playing() {\n        return this._playing;\n    }\n    setOrRemoveAttribute(name, value) {\n        if (value == null) {\n            this.removeAttribute(name);\n        }\n        else {\n            this.setAttribute(name, value);\n        }\n    }\n}\n\nwindow.customElements.define('midi-player', PlayerElement);\nwindow.customElements.define('midi-visualizer', VisualizerElement);\n\nexport { PlayerElement, VisualizerElement };\n","import 'focus-visible';\nimport 'html-midi-player';\nimport {blobToNoteSequence} from '@magenta/music';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    const fileInput = document.getElementById('midiFile');\n    if (fileInput) {\n        fileInput.addEventListener('change', (e) => {\n            blobToNoteSequence(e.target.files[0]).then((seq) => {\n                document.getElementById('mainPlayer').noteSequence = seq;\n                document.getElementById('mainVisualizer').noteSequence = seq;\n            }).catch((reason) => {\n                alert('Failed to load MIDI file.');\n                console.error(reason);\n            });\n        });\n    }\n});\n"],"names":["applyFocusVisiblePolyfill","scope","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesAllowlist","text","search","url","tel","email","password","number","date","month","week","time","datetime","datetime-local","isValidFocusTarget","el","document","nodeName","classList","addFocusVisibleClass","contains","add","setAttribute","onPointerDown","e","addInitialPointerMoveListeners","addEventListener","onInitialPointerMove","target","toLowerCase","removeEventListener","metaKey","altKey","ctrlKey","activeElement","visibilityState","type","tagName","readOnly","isContentEditable","hasAttribute","window","clearTimeout","setTimeout","remove","removeAttribute","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","DOCUMENT_NODE","documentElement","event","CustomEvent","error","createEvent","initCustomEvent","dispatchEvent","factory","$6155954a16b0acd5a26a945387234e0a$exports","core","controlsTemplate","createElement","innerHTML","visualizerTemplate","formatTime","seconds","negative","s","Math","floor","abs","m","h","VISUALIZER_TYPES","VisualizerElement","HTMLElement","constructor","super","arguments","this","domInitialized","ns","_config","observedAttributes","connectedCallback","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","wrapper","initVisualizerNow","attributeChangedCallback","name","_oldValue","_newValue","initVisualizer","initTimeout","[object Object]","src","urlToNoteSequence","svg","createElementNS","visualizer","PianoRollSVGVisualizer","WaterfallSVGVisualizer","div","StaffSVGVisualizer","redraw","activeNote","clearActiveNotes","noteSequence","value","getAttribute","setOrRemoveAttribute","indexOf","Error","join","config","VISUALIZER_EVENTS","playingPlayer","PlayerElement","needInitNs","visualizerListeners","Map","_playing","seeking","controlPanel","querySelector","playButton","currentTimeLabel","totalTimeLabel","seekBar","player","isPlaying","stop","start","getPlayState","pause","currentTime","textContent","seekTo","resume","initPlayerNow","newValue","initPlayer","fn","setVisualizerSelector","readyState","initNs","setLoading","setError","max","String","totalTime","soundFont","callbackObject","run","n","noteCallback","Player","SoundFontPlayer","undefined","loadSamples","setLoaded","playing","offset","notes","filter","note","startTime","length","promise","handleStop","addVisualizer","listeners","detail","set","removeVisualizer","get","delete","finished","duration","selector","values","clear","element","querySelectorAll","console","warn","disabled","title","parseFloat","customElements","define","fileInput","getElementById","blobToNoteSequence","files","then","seq","catch","reason","alert"],"version":3,"file":"index.js.map"}